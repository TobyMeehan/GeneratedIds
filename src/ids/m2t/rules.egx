rule StateMachine2Saga 
	transform machine : ids::StateMachine {
	
	template : "templates/StateMachines/StateMachine2Saga.egl"
	
	parameters : Map {
		
		"namespace" = machine.ids.name+".StateMachines."+machine.name,
		"eventNamespace" = machine.ids.name+".Events",
		"className" = machine.name+"StateMachine",
		"stateTypeName" = machine.name+"State",
		
		"events" = machine.events + machine.consumes,
		"states" = machine.states,
		"initialTransitions" = machine.transitions.select(transition|transition.from == null),
		"schedules" = machine.schedules
		
	}	
	
	target : "gen/src/"+machine.ids.name+"/StateMachines/"+machine.name+"/"+machine.name+"StateMachine.cs"
}

rule StateMachine2State
	transform machine : ids::StateMachine {

	template : "templates/StateMachines/StateMachine2State.egl"
	
	parameters : Map {
	
		"namespace" = machine.ids.name+".StateMachines."+machine.name,
		"className" = machine.name+"State",
		"fields" = machine.fields
	
	}
	
	target : "gen/src/"+machine.ids.name+"/StateMachines/"+machine.name+"/"+machine.name+"State.cs"
	
}

rule Event2Record
	transform event : ids::Event {
	
	template : "templates/Events/Event2Record.egl"
	
	parameters : Map {
	
		"namespace" = event.ids != null ? event.ids.name+".Events" : event.stateMachine.ids.name+".StateMachines."+event.stateMachine.name,
		"className" = event.name,
		"fields" = event.fields
	
	}
	
	target : "gen/src/"+(event.ids != null ? event.ids.name+"/Events/"+event.name+".cs" : event.stateMachine.ids.name+"/StateMachines/"+event.stateMachine.name+"/"+event.name+".cs")
		
}